openapi: 3.0.0

info:
  version: '1.0'
  title: 'iNeedHelp Web API'
  description: 'Web Resources Specification for iNeedHelp'

servers:
- url: http://lbaw.fe.up.pt # Alterar !!
  description: Production server

externalDocs:
  description: Our Project Documentation
  url: https://git.fe.up.pt/lbaw/lbaw2122/lbaw2153/-/wikis/home

tags:
  - name: 'M01: Authentication'
  - name: 'M02: Questions'
  - name: 'M03: Static Pages'
  - name: 'M04: Administration'
  - name: 'M05: Answers'
  - name: 'M06: Users'
  - name: 'M07: Comments'

paths:
  # M01: Authentication
  /login:
    get:
      operationId: R101
      summary: 'R101: Login Form'
      description: 'Provides the login form. ACCESS: VIS'
      tags:
        - 'M01: Authentication'
      responses:
        '200':
          description: 'OK. Show login UI'

    post:
      operationId: R102
      summary: 'R102: Login Action'
      description: 'Processes login form submission. ACCESS: VIS'
      tags:
        - 'M01: Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier: # which can be either username or email
                  type: string
                password:
                  type: string
              required:
                - identifier
                - password
      responses:
        '302':
          description: 'Redirect after processing the login credentials'
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to home page'
                  value: '/' 
                302Error:
                  description: 'Failed authentication. Redirect to login form.'
                  value: '/login'

  /logout:
    post:
      operationId: R103
      summary: 'R103: Logout Action'
      description: 'Logout the current authenticated user. ACCESS: USR, MOD, ADM'
      tags:
        - 'M01: Authentication'
      responses:
        '302':
         description: 'Redirect after processing logout.'
         headers:
           Location:
             schema:
               type: string
             examples:
               302Success:
                 description: 'Successful logout. Redirect to login form.'
                 value: '/login'

  /register:
    get:
      operationId: R104
      summary: 'R104: Register Form'
      description: 'Provides the registration form. ACCESS: VIS'
      tags:
        - 'M01: Authentication'
      responses:
        '200':
         description: 'Ok. Show Sign-Up Interface'   
    
    post:
      operationId: R105
      summary: 'R105: Register Action'
      description: 'Processes registration form submission. ACCESS: VIS'
      tags:
        - 'M01: Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                full_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - username
                - email
                - password
      responses:
        '302':
          description: 'Redirect after processing the new user information.'
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to user profile.'
                  value: '/users/{id}'
                302Failure:
                  description: 'Failed authentication. Redirect to register form.'
                  value: '/register'

  # M06: Users
  /users/{id}:
    get:
      operationId: R601
      summary: 'R601: User Profile Page'
      description: 'Shows authenticated user profile page. ACCESS: VIS'
      tags:
        - 'M06: Users'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: 'OK. Show user profile page.'
  
    put: #edit user profile information
      operationId: R602
      summary: 'R602: Edit User Profile Action'
      description: 'Processes the new user profile information from form submission. ACCESS: OWN, ADM'
      tags:
        - 'M06: Users'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bio:
                  type: string
                location:
                  type: string
                email:
                  type: string
                password:
                  type: string
                profile_image:
                  type: string
                  format: binary
                full_name: 
                  type: string
                status:
                  type: string
      responses:
        '302':
          description: 'Redirect after processing the new user information.'
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful profile edition submission. Redirect to user profile.'
                  value: '/users/{id}'
                302Failure:
                  description: 'Failed profile edition submission. Redirect to user profile.'
                  value: '/users/{id}'

  # M02: Questions
  /api/questions:
    get:
      operationId: R201
      summary: 'R201: Search Question API'
      description: 'Searches for questions and returns the results as JSON. Access: VIS'
      tags:
        - 'M02: Questions'
      parameters:
       - in: query
         name: query
         description: String to use for full-text search
         schema:
           type: string
         required: false
       - in: query
         name: tags
         description: Tags of the questions
         schema:
           type: string
         required: false
       - in: query
         name: keywords
         description: Keywords that might be found in the content body of the question
         schema:
           type: string
         required: false
       - in: query
         name: author
         description: The username of the author who post the question
         schema:
           type: integer
         required: false
       - in: query
         name: min_views
         description: Minimal number of views
         schema:
           type: integer
         required: false
       - in: query
         name: max_views
         description: Maximal number of views
         schema:
           type: integer
         required: false
       - in: query
         name: min_created_at
         description: Minimal created time
         schema:
           type: string
         required: false
       - in: query
         name: max_created_at
         description: Maximal created time
         schema:
           type: string
         required: false
       - in: query
         name: min_updated_at
         description: Minimal updated time
         schema:
           type: string
         required: false
       - in: query
         name: max_updated_at
         description: Max updated time
         schema:
           type: string
         required: false
       - in: query
         name: result_size
         description: Number of results that will be returned. By default 10.
         schema:
           type: integer
         required: false
      responses:
        '200':
          description: 'Success'
          content:
           application/json:
             schema:
               type: array
               items:
                 type: object
                 properties:
                   id:
                     type: string
                   title:
                     type: string
                   content:
                     type: string
                   views:
                     type: integer
                   user_id:     # The author of the question
                     type: integer
                   created_at:
                     type: object
                   updated_at:
                     type: object
                   tags:
                     type: string
                   answers:
                     type: array    #Array of answer id
                   accepted_answer_id: 
                     type: integer
               example:
                 result: {
                   id: 1,
                   title: "Who is Linus Torvalds?",
                   content: "I would like to know who Linus Torvalds is, and what has he done?",
                   views: 9192,
                   user_id: 1,
                   created_at: 12 December 2021,
                   updated_at: 13 December 2021,
                   tags: "linux, people",
                   accepted_answer_id: 1,
                   answers: {
                    answerid: 1,
                    content: "He was the person who invented linux",
                    user_id: 2,
                    created_at: 13 December 2021,
                    updated_at: 13 December 2021,
                  }
                 }


  /questions/{id}:
    get:
      operationId: R202
      summary: 'R202: Question Page'
      description: 'Shows individual question page. ACCESS: VIS'
      tags:
        - 'M02: Questions'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: 'OK. Show individual question page.'
    delete:
      operationId: R203
      summary: 'R203: Delete Question Action'
      description: 'Processes the delete Question requesiton. ACCESS: OWN, ADM'
      tags:
        - 'M02: Questions'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '302':
          description: 'Redirect after deleting Question.'
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful question deletion. Redirect to home page.'
                  value: '/'
                302Failure:
                  description: 'Failed question deletion. Redirect to question page.'
                  value: '/questions/{id}'
    put:
      operationId: R204
      summary: 'R204: Edit Question Action'
      description: 'Processes the new question information from form submission. Access: OWN, ADM'
      tags:
        - 'M02: Questions'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '302':
          description: 'Redirect after Question edition form submission.'
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful question edition. Redirect to question page.'
                  value: '/questions/{id}'
                302Failure:
                  description: 'Failed question edition. Redirect to question page.'
                  value: '/questions/{id}'
  
  /question/new:
    get:
      operationId: R204
      summary: 'R204: Question Form'
      description: 'Shows new question form. ACCESS: USR'
      tags:
        - 'M02: Questions'
      responses:
        '200':
          description: 'Ok. Show new question form'

    post:
      operationId: R205
      summary: 'R205: Question Form Action'
      description: 'Processes the new question form. ACCESS: USR'
      tags:
        - 'M02: Questions'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                title:
                  type: string
                content:
                  type: string
              required:
                - username
                - title
                - content
      responses:
        '302':
          description: 'Ok. Redirect to the newly created question page'
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful question'
                  value: '/' 
                302Error:
                  description: 'Failed question. Redirect to question form.'
                  value: '/question/new'
                  
  # M05: Answers
  /answer/new-answer:    
    post:
      operationId: R501
      summary: 'R501: Answer Form Action'
      description: 'Processes the new answer form. ACCESS: USR'
      tags:
        - 'M05: Answers'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                title:
                  type: string
                content:
                  type: string
              required:
                - username
                - title
                - content
      responses:
        '302':
          description: 'Ok. Redirect to the newly created question page'
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful answer'
                  value: '/' 
                302Error:
                  description: 'Failed answer. Redirect to answer form.'
                  value: '/answer/new-answer'
        
  # M07: Comments
  /comment:
    post:
      operationId: R701
      summary: 'R701: Comment Action'
      description: 'Processes new comment. ACCESS: USR'
      tags:
        - "M07: Comments"
      responses:
        '201':
          description: 'ok'
        '400':
          description: 'bad'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                for:
                  type: string # Enum for QUESTION, ANSWER
                identifier:
                  type: integer # question id or answer id, depending on 'for'
                content:
                  type: string
              required:
                - for
                - identifier
                - content        

  /comment/{id}:     
    delete:
      operationId: R702
      summary: 'R702: Delete comment'
      description: 'Deletes the comment, if the caller has permission. ACCESS:USR'
      tags:
        - "M07: Comments"
      responses:
        '200':
          description: 'Successfully deleted comment'
        '400':
          description: 'Error while deleting comment'
      
    patch:
      operationId: R703
      summary: 'R703: Edit comment'
      description: 'Edits the comment, if the caller has permission. ACCESS:USR'
      tags:
        - "M07: Comments"
      responses:
        '200':
          description: 'Successfully edited comment'
        '403':
          description: 'No permission'
        '404':
          description: 'Comment not found'
        '400':
          description: 'Error while editing comment'
    
      
  # M03: Static Pages
  /about-us:
    get:
      operationId: R301
      summary: 'R302: About-Us Page'
      description: 'Shows about us page ACCESS: VIS'
      tags:
        - 'M03: Static Pages'
      responses:
        '200':
          description: 'Ok. Show about-us page'

  /support:
    get:
      operationId: R302
      summary: 'R302: Support Page'
      description: 'Shows support page ACCESS: VIS'
      tags:
        - 'M03: Static Pages'
      responses:
        '200':
          description: 'Ok. Show Support page'

  /authentication:
    get:
      operationId: R303
      summary: 'R303: Authentication Needed Page'
      description: 'Shows the authentication needed page. ACCESS: VIS'
      tags:
        - 'M03: Static Pages'
      responses:
        '200':
          description: 'Ok. Show authentication needed page'

  # M04: Administration
  /dashboard:
    post:
      operationId: R401
      summary: 'R401: Administration Dashboard Page'
      description: 'Shows the administration dashboard page. ACCESS: ADM'
      tags:
        - 'M04: Administration'
      responses:
        '200':
          description: 'Ok. Show dashboard page'
